{"ast":null,"code":"import { HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor() {}\n\n    intercept(request, next) {\n      let ok;\n      return next.handle(request).pipe(tap({\n        next: event => {\n          if (event instanceof HttpResponse) {\n            ok = event.body;\n          }\n        },\n        error: error => ok = error.error.message\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)();\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}